@startuml
'https://plantuml.com/component-diagram

actor Manager
actor Client


package "Admin panel" {
    database Postgres as admin_db
    component nginx as admin_nginx
    component Django as admin_app
}
admin_app <--> admin_db
admin_nginx <--> admin_app
Manager <.right.> admin_nginx

package "ETL" {
    database Elasticsearch as es_storage
    component ETL as es_etl
}
admin_db <.left. es_etl: extract movies\ndata
es_etl --> es_storage: upload

package "Async API" {
    database Redis as async_redis
    component FastAPI as async_app
}
async_app <--> async_redis: cache movies\ndata
Client <..> async_app: getting movies\ndata
async_app <.left.> es_storage


package "Auth API" {
    component nginx as auth_nginx
    component Flask as auth_flask
    database Redis as auth_redis
    database Postgres as auth_db
}
auth_flask <--> auth_redis: cache user\ndata
auth_flask <--> auth_db
auth_nginx <--> auth_flask
async_app <..> auth_nginx: check authorization
Client <..> auth_nginx: authorization\nauthentification
auth_flask <.down.> OAuth2: external providers
'auth_nginx <..> admin_nginx

cloud "OAuth2" {
    node Google
    node Facebook
    node Yandex
}

package "UGC" {
    component FastAPI as ugc_gate
    database Kafka as ugc_kafka
    component ETL as ugc_etl
    database ClickHouse as ugc_clickhouse
}
ugc_gate --> ugc_kafka: save events
ugc_kafka <-- ugc_etl: extract events
ugc_etl --> ugc_clickhouse: upload events
Client <..> ugc_gate

@enduml